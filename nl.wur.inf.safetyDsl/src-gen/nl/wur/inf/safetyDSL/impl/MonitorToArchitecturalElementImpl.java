/**
 * generated by Xtext 2.18.0
 */
package nl.wur.inf.safetyDSL.impl;

import java.util.Collection;

import nl.wur.inf.safetyDSL.Monitor;
import nl.wur.inf.safetyDSL.MonitorToArchitecturalElement;
import nl.wur.inf.safetyDSL.SafetyCritical;
import nl.wur.inf.safetyDSL.SafetyDSLPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Monitor To Architectural Element</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link nl.wur.inf.safetyDSL.impl.MonitorToArchitecturalElementImpl#getMonitor <em>Monitor</em>}</li>
 *   <li>{@link nl.wur.inf.safetyDSL.impl.MonitorToArchitecturalElementImpl#getSafetyCritical <em>Safety Critical</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MonitorToArchitecturalElementImpl extends SafetyCriticalRelationImpl implements MonitorToArchitecturalElement
{
  /**
   * The cached value of the '{@link #getMonitor() <em>Monitor</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMonitor()
   * @generated
   * @ordered
   */
  protected Monitor monitor;

  /**
   * The cached value of the '{@link #getSafetyCritical() <em>Safety Critical</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSafetyCritical()
   * @generated
   * @ordered
   */
  protected EList<SafetyCritical> safetyCritical;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MonitorToArchitecturalElementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SafetyDSLPackage.Literals.MONITOR_TO_ARCHITECTURAL_ELEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Monitor getMonitor()
  {
    if (monitor != null && monitor.eIsProxy())
    {
      InternalEObject oldMonitor = (InternalEObject)monitor;
      monitor = (Monitor)eResolveProxy(oldMonitor);
      if (monitor != oldMonitor)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SafetyDSLPackage.MONITOR_TO_ARCHITECTURAL_ELEMENT__MONITOR, oldMonitor, monitor));
      }
    }
    return monitor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Monitor basicGetMonitor()
  {
    return monitor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMonitor(Monitor newMonitor)
  {
    Monitor oldMonitor = monitor;
    monitor = newMonitor;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SafetyDSLPackage.MONITOR_TO_ARCHITECTURAL_ELEMENT__MONITOR, oldMonitor, monitor));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<SafetyCritical> getSafetyCritical()
  {
    if (safetyCritical == null)
    {
      safetyCritical = new EObjectResolvingEList<SafetyCritical>(SafetyCritical.class, this, SafetyDSLPackage.MONITOR_TO_ARCHITECTURAL_ELEMENT__SAFETY_CRITICAL);
    }
    return safetyCritical;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SafetyDSLPackage.MONITOR_TO_ARCHITECTURAL_ELEMENT__MONITOR:
        if (resolve) return getMonitor();
        return basicGetMonitor();
      case SafetyDSLPackage.MONITOR_TO_ARCHITECTURAL_ELEMENT__SAFETY_CRITICAL:
        return getSafetyCritical();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SafetyDSLPackage.MONITOR_TO_ARCHITECTURAL_ELEMENT__MONITOR:
        setMonitor((Monitor)newValue);
        return;
      case SafetyDSLPackage.MONITOR_TO_ARCHITECTURAL_ELEMENT__SAFETY_CRITICAL:
        getSafetyCritical().clear();
        getSafetyCritical().addAll((Collection<? extends SafetyCritical>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SafetyDSLPackage.MONITOR_TO_ARCHITECTURAL_ELEMENT__MONITOR:
        setMonitor((Monitor)null);
        return;
      case SafetyDSLPackage.MONITOR_TO_ARCHITECTURAL_ELEMENT__SAFETY_CRITICAL:
        getSafetyCritical().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SafetyDSLPackage.MONITOR_TO_ARCHITECTURAL_ELEMENT__MONITOR:
        return monitor != null;
      case SafetyDSLPackage.MONITOR_TO_ARCHITECTURAL_ELEMENT__SAFETY_CRITICAL:
        return safetyCritical != null && !safetyCritical.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //MonitorToArchitecturalElementImpl
