/**
 * generated by Xtext 2.18.0
 */
package nl.wur.inf.safetyDSL.impl;

import java.util.Collection;

import nl.wur.inf.safetyDSL.HazardElement;
import nl.wur.inf.safetyDSL.HazardRelation;
import nl.wur.inf.safetyDSL.HazardViewpoint;
import nl.wur.inf.safetyDSL.SafetyDSLPackage;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Hazard Viewpoint</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link nl.wur.inf.safetyDSL.impl.HazardViewpointImpl#getElements <em>Elements</em>}</li>
 *   <li>{@link nl.wur.inf.safetyDSL.impl.HazardViewpointImpl#getRelations <em>Relations</em>}</li>
 * </ul>
 *
 * @generated
 */
public class HazardViewpointImpl extends SafetyViewpointImpl implements HazardViewpoint
{
  /**
   * The cached value of the '{@link #getElements() <em>Elements</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElements()
   * @generated
   * @ordered
   */
  protected EList<HazardElement> elements;

  /**
   * The cached value of the '{@link #getRelations() <em>Relations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRelations()
   * @generated
   * @ordered
   */
  protected EList<HazardRelation> relations;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected HazardViewpointImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SafetyDSLPackage.Literals.HAZARD_VIEWPOINT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<HazardElement> getElements()
  {
    if (elements == null)
    {
      elements = new EObjectContainmentEList<HazardElement>(HazardElement.class, this, SafetyDSLPackage.HAZARD_VIEWPOINT__ELEMENTS);
    }
    return elements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<HazardRelation> getRelations()
  {
    if (relations == null)
    {
      relations = new EObjectContainmentEList<HazardRelation>(HazardRelation.class, this, SafetyDSLPackage.HAZARD_VIEWPOINT__RELATIONS);
    }
    return relations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SafetyDSLPackage.HAZARD_VIEWPOINT__ELEMENTS:
        return ((InternalEList<?>)getElements()).basicRemove(otherEnd, msgs);
      case SafetyDSLPackage.HAZARD_VIEWPOINT__RELATIONS:
        return ((InternalEList<?>)getRelations()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SafetyDSLPackage.HAZARD_VIEWPOINT__ELEMENTS:
        return getElements();
      case SafetyDSLPackage.HAZARD_VIEWPOINT__RELATIONS:
        return getRelations();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SafetyDSLPackage.HAZARD_VIEWPOINT__ELEMENTS:
        getElements().clear();
        getElements().addAll((Collection<? extends HazardElement>)newValue);
        return;
      case SafetyDSLPackage.HAZARD_VIEWPOINT__RELATIONS:
        getRelations().clear();
        getRelations().addAll((Collection<? extends HazardRelation>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SafetyDSLPackage.HAZARD_VIEWPOINT__ELEMENTS:
        getElements().clear();
        return;
      case SafetyDSLPackage.HAZARD_VIEWPOINT__RELATIONS:
        getRelations().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SafetyDSLPackage.HAZARD_VIEWPOINT__ELEMENTS:
        return elements != null && !elements.isEmpty();
      case SafetyDSLPackage.HAZARD_VIEWPOINT__RELATIONS:
        return relations != null && !relations.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //HazardViewpointImpl
